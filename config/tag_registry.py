"""
Centralized Tag Registry - Single Source of Truth
=================================================

All Chatwoot labels/tags MUST be defined here.
This ensures consistency between:
- setup_chatwoot_labels.py (creates labels in Chatwoot)
- enhanced_crm_agent.py (assigns labels to conversations)

IMPORTANT: Any tag generated by the agent MUST exist in this registry.
"""

# ============================================================================
# PRIMARY SEGMENTATION LABELS (Top Priority - Always Visible)
# ============================================================================
SEGMENTATION_LABELS = {
    # Lead Quality Segmentation (Based on Lead Score)
    "hot_lead": {
        "title": "hot-lead",
        "description": "HOT lead (80+ points) - Immediate follow-up required",
        "color": "#FF4444",  # Red - Urgent
        "show_on_sidebar": True
    },
    "warm_lead": {
        "title": "warm-lead",
        "description": "WARM lead (50-79 points) - Follow-up within 24 hours",
        "color": "#FFA500",  # Orange - Important
        "show_on_sidebar": True
    },
    "cold_lead": {
        "title": "cold-lead",
        "description": "COLD lead (<50 points) - Standard follow-up",
        "color": "#4169E1",  # Blue - Standard
        "show_on_sidebar": True
    },

    # Behavioral Segmentation
    "serious_buyer": {
        "title": "serieuze-koopinteresse",
        "description": "Serieuze koopinteresse - Hoge intent",
        "color": "#00AA00",  # Green - Positive
        "show_on_sidebar": True
    },
    "time_waster": {
        "title": "tijdverspilling",
        "description": "Tijdverspilling - Lage koopintent",
        "color": "#808080",  # Gray - Low priority
        "show_on_sidebar": True
    },
    "general_inquiry": {
        "title": "algemene-vragen",
        "description": "Algemene vragen - Informatief",
        "color": "#87CEEB",  # Sky Blue - Info
        "show_on_sidebar": True
    }
}

# ============================================================================
# CUSTOMER JOURNEY LABELS
# ============================================================================
JOURNEY_LABELS = {
    "first_contact": {
        "title": "journey-eerste-contact",
        "description": "Eerste contact met klant",
        "color": "#E6E6FA",  # Lavender
        "show_on_sidebar": False
    },
    "initial_inquiry": {
        "title": "journey-initiële-vraag",
        "description": "Initiële vraagstelling",
        "color": "#E6E6FA",
        "show_on_sidebar": False
    },
    "information_gathering": {
        "title": "journey-informatie-verzameling",
        "description": "Klant verzamelt informatie",
        "color": "#E6E6FA",
        "show_on_sidebar": False
    },
    "comparison_shopping": {
        "title": "journey-vergelijken",
        "description": "Klant vergelijkt opties",
        "color": "#DDA0DD",  # Plum
        "show_on_sidebar": False
    },
    "ready_to_buy": {
        "title": "journey-koopklaar",
        "description": "Klaar om te kopen",
        "color": "#9370DB",  # Medium Purple
        "show_on_sidebar": False
    }
}

# ============================================================================
# CAR INTEREST LABELS
# ============================================================================
CAR_INTEREST_LABELS = {
    # Brands
    "volkswagen": {
        "title": "interesse-volkswagen",
        "description": "Interesse in Volkswagen",
        "color": "#00B2E3",  # VW Blue
        "show_on_sidebar": False
    },
    "audi": {
        "title": "interesse-audi",
        "description": "Interesse in Audi",
        "color": "#BB0A30",  # Audi Red
        "show_on_sidebar": False
    },
    "mercedes": {
        "title": "interesse-mercedes",
        "description": "Interesse in Mercedes-Benz",
        "color": "#00ADEF",  # Mercedes Blue
        "show_on_sidebar": False
    },
    "bmw": {
        "title": "interesse-bmw",
        "description": "Interesse in BMW",
        "color": "#1C69D4",  # BMW Blue
        "show_on_sidebar": False
    },

    # Car Types
    "sedan": {
        "title": "type-sedan",
        "description": "Interesse in sedan",
        "color": "#4B0082",  # Indigo
        "show_on_sidebar": False
    },
    "suv": {
        "title": "type-suv",
        "description": "Interesse in SUV",
        "color": "#4B0082",
        "show_on_sidebar": False
    },
    "hatchback": {
        "title": "type-hatchback",
        "description": "Interesse in hatchback",
        "color": "#4B0082",
        "show_on_sidebar": False
    },
    "station": {
        "title": "type-station",
        "description": "Interesse in stationwagen",
        "color": "#4B0082",
        "show_on_sidebar": False
    },

    # Fuel Types
    "diesel": {
        "title": "brandstof-diesel",
        "description": "Voorkeur voor diesel",
        "color": "#556B2F",  # Dark Olive Green
        "show_on_sidebar": False
    },
    "benzine": {
        "title": "brandstof-benzine",
        "description": "Voorkeur voor benzine",
        "color": "#556B2F",
        "show_on_sidebar": False
    },
    "elektrisch": {
        "title": "brandstof-elektrisch",
        "description": "Voorkeur voor elektrisch",
        "color": "#00FF00",  # Lime Green
        "show_on_sidebar": False
    },
    "hybride": {
        "title": "brandstof-hybride",
        "description": "Voorkeur voor hybride",
        "color": "#32CD32",  # Lime Green
        "show_on_sidebar": False
    }
}

# ============================================================================
# PURCHASE INTENT LABELS
# ============================================================================
INTENT_LABELS = {
    "budget_specified": {
        "title": "intent-budget-gespecificeerd",
        "description": "Budget is genoemd",
        "color": "#FFD700",  # Gold
        "show_on_sidebar": False
    },
    "urgent_timeline": {
        "title": "intent-urgente-tijdlijn",
        "description": "Urgente aankooptijdlijn",
        "color": "#FF6347",  # Tomato
        "show_on_sidebar": False
    },
    "test_drive_requested": {
        "title": "intent-proefrit-gevraagd",
        "description": "Proefrit aangevraagd",
        "color": "#FF8C00",  # Dark Orange
        "show_on_sidebar": False
    },
    "trade_in_mentioned": {
        "title": "intent-inruil-genoemd",
        "description": "Inruil auto genoemd",
        "color": "#DAA520",  # Goldenrod
        "show_on_sidebar": False
    },
    "financing_inquiry": {
        "title": "intent-financiering-vraag",
        "description": "Vraag over financiering",
        "color": "#B8860B",  # Dark Goldenrod
        "show_on_sidebar": False
    },
    "immediate_purchase": {
        "title": "intent-directe-aankoop",
        "description": "Wil direct kopen",
        "color": "#8B0000",  # Dark Red
        "show_on_sidebar": False
    }
}

# ============================================================================
# BEHAVIORAL LABELS
# ============================================================================
BEHAVIORAL_LABELS = {
    "price_shopper": {
        "title": "gedrag-prijsvergelijker",
        "description": "Vergelijkt prijzen",
        "color": "#CD853F",  # Peru
        "show_on_sidebar": False
    },
    "detail_oriented": {
        "title": "gedrag-detailgericht",
        "description": "Stelt gedetailleerde vragen",
        "color": "#D2691E",  # Chocolate
        "show_on_sidebar": False
    },
    "impulsive": {
        "title": "gedrag-impulsief",
        "description": "Impulsief gedrag",
        "color": "#FF1493",  # Deep Pink
        "show_on_sidebar": False
    },
    "researcher": {
        "title": "gedrag-onderzoeker",
        "description": "Doet uitgebreid onderzoek",
        "color": "#4682B4",  # Steel Blue
        "show_on_sidebar": False
    }
}

# ============================================================================
# ENGAGEMENT LABELS
# ============================================================================
ENGAGEMENT_LABELS = {
    "high_engagement": {
        "title": "engagement-hoog",
        "description": "Hoge betrokkenheid",
        "color": "#228B22",  # Forest Green
        "show_on_sidebar": False
    },
    "medium_engagement": {
        "title": "engagement-gemiddeld",
        "description": "Gemiddelde betrokkenheid",
        "color": "#FFA500",  # Orange
        "show_on_sidebar": False
    },
    "low_engagement": {
        "title": "engagement-laag",
        "description": "Lage betrokkenheid",
        "color": "#DC143C",  # Crimson
        "show_on_sidebar": False
    },
    "repeat_visitor": {
        "title": "engagement-terugkerende-bezoeker",
        "description": "Terugkerende bezoeker",
        "color": "#9370DB",  # Medium Purple
        "show_on_sidebar": False
    }
}

# ============================================================================
# SOURCE/CHANNEL LABELS
# ============================================================================
SOURCE_LABELS = {
    "whatsapp_ai": {
        "title": "bron-whatsapp-ai-agent",
        "description": "Contact via WhatsApp AI Agent",
        "color": "#25D366",  # WhatsApp Green
        "show_on_sidebar": False
    },
    "website": {
        "title": "bron-website",
        "description": "Contact via website",
        "color": "#1E90FF",  # Dodger Blue
        "show_on_sidebar": False
    },
    "phone": {
        "title": "bron-telefoon",
        "description": "Contact via telefoon",
        "color": "#4169E1",  # Royal Blue
        "show_on_sidebar": False
    }
}

# ============================================================================
# ALL LABELS COMBINED (For Setup Script)
# ============================================================================
ALL_LABELS = {
    **SEGMENTATION_LABELS,
    **JOURNEY_LABELS,
    **CAR_INTEREST_LABELS,
    **INTENT_LABELS,
    **BEHAVIORAL_LABELS,
    **ENGAGEMENT_LABELS,
    **SOURCE_LABELS
}

# ============================================================================
# HELPER FUNCTIONS
# ============================================================================

def get_label_title(key: str) -> str:
    """Get label title by key."""
    if key in ALL_LABELS:
        return ALL_LABELS[key]["title"]
    raise KeyError(f"Label key '{key}' not found in registry")

def get_all_label_titles() -> list[str]:
    """Get all label titles as list."""
    return [label["title"] for label in ALL_LABELS.values()]

def get_sidebar_labels() -> list[str]:
    """Get labels that should show in sidebar."""
    return [
        label["title"]
        for label in ALL_LABELS.values()
        if label.get("show_on_sidebar", False)
    ]

def validate_label_key(key: str) -> bool:
    """Check if label key exists in registry."""
    return key in ALL_LABELS

# ============================================================================
# LABEL MAPPING (For Agent Tag Generation)
# ============================================================================

# Map agent logic to label keys
LEAD_QUALITY_MAP = {
    "HOT": "hot_lead",      # 80+ points
    "WARM": "warm_lead",    # 50-79 points
    "COLD": "cold_lead"     # <50 points
}

# Map behavioral patterns to label keys
BEHAVIOR_MAP = {
    "serious": "serious_buyer",
    "time_waster": "time_waster",
    "general": "general_inquiry"
}

# Map journey stages to label keys
JOURNEY_MAP = {
    "first_contact": "first_contact",
    "initial_inquiry": "initial_inquiry",
    "information_gathering": "information_gathering",
    "comparison_shopping": "comparison_shopping",
    "ready_to_buy": "ready_to_buy"
}

# ============================================================================
# VALIDATION
# ============================================================================

def _validate_registry():
    """Validate registry for duplicates and missing fields."""
    titles = [label["title"] for label in ALL_LABELS.values()]

    # Check for duplicate titles
    if len(titles) != len(set(titles)):
        duplicates = [t for t in titles if titles.count(t) > 1]
        raise ValueError(f"Duplicate label titles found: {duplicates}")

    # Check all labels have required fields
    for key, label in ALL_LABELS.items():
        required_fields = ["title", "description", "color", "show_on_sidebar"]
        for field in required_fields:
            if field not in label:
                raise ValueError(f"Label '{key}' missing required field: {field}")

# Run validation on import
_validate_registry()

# ============================================================================
# USAGE EXAMPLES
# ============================================================================

if __name__ == "__main__":
    print(f"Total labels defined: {len(ALL_LABELS)}")
    print(f"Sidebar labels: {len(get_sidebar_labels())}")
    print("\nAll label titles:")
    for title in get_all_label_titles():
        print(f"  - {title}")
